# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
    name: package
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: 'x64'
    - name: Setup Gradle wrapper
      uses: gradle/actions/setup-gradle@v3
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Install bundler and download blosc
      run: |
        brew install dylibbundler
        curl -J -O -k -L 'https://github.com/glencoesoftware/c-blosc-macos-x86_64/releases/download/20220919/libblosc.dylib'
    - if: ${{ matrix.os == 'windows-latest' }}
      name: Download blosc
      run: |
        c:\msys64\usr\bin\wget.exe 'https://github.com/glencoesoftware/c-blosc-windows-x86_64/releases/download/20220919/blosc.dll'
    - if: ${{ matrix.os == 'windows-latest' }}
      name: Run jpackage with Gradle (installer)
      run: ./gradlew jpackage
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Run jpackage with Gradle (application image only)
      run: ./gradlew jpackageImageZip
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Generate dependency report
      run: ./gradlew downloadLicenses
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Upload Mac pkg
      uses: actions/upload-artifact@v4
      with:
        name: macos-package
        path: ./build/distributions/*.zip
        if-no-files-found: error
        retention-days: 3
    - if: ${{ matrix.os == 'windows-latest' }}
      name: Upload Windows MSI
      uses: actions/upload-artifact@v4
      with:
        name: windows-package
        path: ./build/jpackage/*.msi
        if-no-files-found: error
        retention-days: 3
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Upload Mac pkg
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: ./build/reports/license/dependency-license*
        if-no-files-found: error
        retention-days: 3
  upload:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    if: startswith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: List artifacts
        run: ls -R
      - name: Create release draft
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-package/*.msi
            macos-package/*.zip
            dependency-report/*
          draft: true
          fail_on_unmatched_files: true
